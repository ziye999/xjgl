<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:annotation-config></context:annotation-config>
    <context:component-scan base-package="com.hy.dao.impl"/>
    <context:component-scan base-package="com.hy.service.impl"/>
    <!--引入配置属性文件,获取数据源-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:jdbc.properties"></property>
    </bean>
    <bean name="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>
    <!--封装数据源到sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--引入映射文件-->
        <property name="annotatedClasses">
            <list>
                <value>com.hy.domain.User</value>
            </list>
        </property>
        <!--配置hibernate属性-->
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                hibernate.show_sql=true
                hibernate.format_sql=true
            </value>
        </property>
    </bean>
    <!--通过引用sessionFactory创建hibernateTemplate对象-->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--引进事务管理-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--启用事务-->
    <tx:annotation-driven/>
    <!--管理事务-->
    <tx:advice id="txadvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <!--配置事务切面及事务切入位置(不配置的话，无法执行事务操作)-->
    <aop:config>
        <aop:pointcut id="pt" expression="execution(* com.hy.dao.impl.*.*(..))"/>
        <aop:advisor advice-ref="txadvice" pointcut-ref="pt"/>
    </aop:config>
    <!--引入切面代理-->
    <aop:aspectj-autoproxy/>
    <!--创建Log对象-->
    <bean id="log" class="com.hy.log.Log"/>
    <!--配置自定义切面信息及切入位置-->
    <aop:config>
        <aop:aspect ref="log">
            <aop:pointcut id="pl" expression="execution(* com.hy.dao.impl.*.*(..))"/>
            <aop:around method="log" pointcut-ref="pl"/>
        </aop:aspect>
    </aop:config>
</beans>